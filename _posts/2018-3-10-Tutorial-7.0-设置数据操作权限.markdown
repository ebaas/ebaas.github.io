---
layout: post
title:  "设置数据操作权限控制"
date:   2018-03-10
visible: 1
---

基于角色的访问控制是一种基于企业内各个用户的角色调节数据访问的方法。在这种情况下，访问是单个用户执行特定任务（如读取，创建，更新或删除数据实例）的能力。角色根据企业内部的工作职能和部门进行定义。

在Ebaas中，访问控制策略由基于角色的访问控制（ACL）规则组成。一个ACL规则有四个元素：

对象：规则适用的对象。该对象可以是数据模型，类或属性。
主题：规则的主题，可以是角色，角色组合或个人用户。
操作：规则的一组操作，可以读取，更新，创建，上载和删除。
权限：规则中每个操作的权限，即“授予”或“拒绝”。
访问控制策略是数据模型的一部分，并与数据模型一起保存在数据库中。在运行期间，服务器端的访问控制引擎会根据策略检查来自客户端的每个请求，并确定是授予还是拒绝该请求。 UI组件也由策略驱动，以根据用户的权限显示或隐藏功能。

当您在数据模型中创建类时，默认情况下授予每个人对该类的访问权限。如果你想在这个类上有一些访问控制，你需要创建访问控制规则。使用DesignStudio工具创建规则很容易。本教程将引导您完成为在“使用Ebaas构建您的第一个应用程序”教程中构建的问题跟踪应用程序创建ACL规则的步骤。

假设您想创建访问控制策略来执行以下规则：

规则＃1：具有管理员角色的用户可以在“问题”类中创建，更新或删除实例。
规则2：只有“LabA”部门的用户可以创建或更新（但“删除”）“实例”类中的实例，条件是实例的状态不是“已关闭”。
以下是描述如何实施这些要求的步骤。确保Ebaas服务器正在运行。

第1步：打开DesignStudio

您可以在Start-> Ebaas-> DesignStudio中启动DesignStudio。

第2步：打开数据模型

选择包含“问题”类的“TDM”数据模型，以admin用户身份登录。 admin用户的用户名是“admin”，默认密码是“admin”。

第3步：覆盖默认规则

选择树中“类”节点下的“问题”类节点，然后单击右侧的“访问控制”选项卡（参见图1）。

图1：“问题”类的默认访问控制规则

请注意，有一个默认规则会授予每个用户的所有权限（每个用户都有一个Everyone角色）。此规则在数据模型级别定义（单击根节点以查看它），并由包括“问题”类在内的所有类继承。能够在数据模型级定义规则就像定义全局规则一样，这简化了设置访问控制策略的工作。

由于继承的规则不符合我们的需要，您可以创建一个本地规则来覆盖它。

你想要做的是创建一个本地规则，只允许通过图2所示的步骤读取访问“问题”类。确保点击“是”进行确认。

图2：创建一个覆盖规则

您添加一个替代继承的规则的本地规则。然后将读取和下载权限设置为“授予”，其余权限设置为“拒绝”（请参见图3）。

图3：设置本地规则的权限

您已经创建了一个只允许读取和下载课程的基本规则。您将向该课程添加规则，以授予专用角色的其他权限。

第4步：创建规则＃1

规则1很容易创建，只需为管理员角色添加一条规则，并为其授予所有权限（请参见图4），该角色为具有管理员角色的用户提供了所有问题的权限。

图4：管理员的ACL规则

第4步：创建规则＃2

为了让“LabA”部门的用户有权读取，更新和创建问题，您可以使用读取，更新和创建权限为“LabA”角色创建规则。

但规则＃2有一个条件，规定当问题的状态不是“已关闭”时规则有效。换句话说，如果某个问题的状态为“已关闭”，则它变为只读状态。

这是使用条件创建ACL规则的示例。这也被称为基于实例的访问控制。

对于规则＃2，您可以创建一个如图5所示的规则：

图5：规则＃2的ACL规则

条件的地方

{% highlight ruby %}
$this/Status!="Closed"
{% endhighlight %}

是引擎用来检查实例是否符合条件的XQuery表达式。如果属实，则适用该规则。否则，引擎不会使用它。

第5步：保存数据模型

单击工具栏上的“保存到数据库”图标将数据模型保存到数据库。

第4步：验证访问控制

我们首先检查规则＃1。使用推荐的Web浏览器连接到http：// localhost：8080的应用程序。

以具有管理员角色的“demo1”登录。 “demo1”用户的密码是“888”。

打开“问题跟踪”页面，打开问题的编辑表单，将其状态更改为“已关闭”，然后提交表单。 （见图5）。

图6：将问题的状态更改为“已关闭”

在“关闭”状态下，demo1仍然能够更新和删除实例（参见图7）。所以，规则＃1起作用。

图7：允许对管理员关闭的问题进行更新或删除

然后，我们来检查规则＃2。注销“demo1”，以“demo2”登录，他具有“LabA”角色。 “demo2”的密码是“888”。

打开“问题跟踪”页面，点击状态为“已关闭”的问题。在预期的命令栏中没有“编辑”或“删除”命令（见图8）。

图7：没有更新或删除“LabA”用户关闭的问题

现在，点击状态不是“已关闭”的问题。在命令栏中有一个“编辑”命令（见图9），这也是预料之中的。

图9：允许对尚未关闭的问题进行更新


